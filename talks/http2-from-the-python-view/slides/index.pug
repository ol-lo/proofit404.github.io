doctype html
html
  head
    meta(charset='utf-8')
    link(rel='stylesheet' type='text/css' href='css/reveal.css')
    link(rel='stylesheet' type='text/css' href='css/theme/white.css')
    link(rel='stylesheet' type='text/css' href='lib/css/github-gist.min.css')
    link(rel='stylesheet' type='text/css' href='css/customize.css')
    title HTTP/2
    script.
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
  body
    .reveal
      .slides
        section
          h1 HTTP/2
          h2 Artem Malyshev
          h3 @proofit404
        section
          h1 Why?
          h3 HTTP/1
          h3 is the power
          h3 running Internet
        section
          h1 HTTP/1 problems
          ul
            li 6 RFC
            li text based
            li incomplete implementation
            li not optimal connection usage
        section
          h1 Techniques we use
          p frontend optimization
        section
          h1 HTTP/2
          p principles
        section
          h2 Implementations
          p.
            Ace Aerys Akamai GHost Apache Tomcat http4s-blaze Brocade Traffic
            Manager Chatterbox Chromium libcurl Deuterium E2 Systems PATH Ericsson
            MSP F5 GFE H2O hpack http2dotnet HttpTwo httpbis hyper Shaka Jetty
            LiteSpeed Enterprise Microsoft Internet Explorer mod_h2 Mozilla
            Firefox Netty nghttp2 Radware node-http2 OkHttp River Sasazka
            second-transfer ShimmerCat SuaveIO Swoole Trusterd Twitter Undertow
            Vert.x WASD Warp Wireshark WKWebView cashpack proxygen firefly
        section
          h1 Python
        section
          h2 Cory Benfield
          img(src='pics/Cory.jpg').face-photo.photo-corner
          aside.notes
            p Former HPE
            p Now Apple
            p requests, urllib3, hyper, pyopenssl
            p IETFâ€™s HTTPBis Working Group
        section
          h1 our example
        section
          h2 Generating TLS sert
          pre
            code.bash.
              openssl req -x509  \
                -newkey rsa:4096 \
                -days 365 -nodes \
                -keyout key.pem  \
                -out cert.pem
        section
          h1 twisted
        section
          h1 mitmproxy
        section
          img(src='pics/django-channels.png')
        section
          h2 Running Daphne
          pre
            code.bash.
              daphne                 \
                --ssl                \
                --port=8000          \
                --privateKey=key.pem \
                --certKey=cert.pem   \
                project.asgi:channel_layer
        section
          h2 Django Admin
          img(src='pics/channels-worked.png')
        section
          h2 True story
          img(src='pics/standards.png')
        section
          h1 Questions?
    script(src='lib/js/head.min.js')
    script(src='js/reveal.js')
    script(src='lib/js/highlight.min.js')
    script.
      hljs.initHighlightingOnLoad();
    script.
      Reveal.initialize({
          controls: false,
          progress: false,
          slideNumber: true,
          history: true,
          transition: 'none',
          dependencies: [
              { src: 'plugin/notes/notes.js', async: true }
          ]
      });
//- Local Variables:
//- eval: (add-hook (quote after-save-hook) (function (lambda nil (let ((proc (start-process-shell-command "pug" "*Pug*" (format "pug %s" (buffer-file-name))))) (set-process-sentinel proc (function (lambda (proc status) (and (buffer-file-name) (message "Pug: rendered %s" (file-name-nondirectory (buffer-file-name)))))))))) nil t)
//- eval: (start-process-shell-command "http.server" "*http.server*" "python -m http.server --bind localhost 4000")
//- eval: (run-at-time 2 nil (function browse-url) "http://localhost:4000")
//- End:
