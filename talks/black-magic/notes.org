* descriptors and metaclasses
** django fields
** descriptors doesn't work if they were stored in the instance
   This is the reason my dependency library works
** TODO https://github.com/dabeaz/sly/blob/master/sly/lex.py
   - What __prepare__ metaclass classmethod does?
   - How they can propagate _ function into it?
* traceback rewrite
** jinja
*** TODO run this example successfully
    #+BEGIN_SRC python
      try:
          tb_set_next = _init_ugly_crap()
      except:
          pass
      del _init_ugly_crap
    #+END_SRC
* don't propagate exception after with
** pytest
** unittest
   #+BEGIN_SRC python
     # return True from __exit__ make exception swallow
   #+END_SRC
* frame access
** q
** logging
   #+BEGIN_SRC python
     class Logger:
         def findCaller(self):
             f = currentframe()
             ...
   #+END_SRC
*** TODO Google *sys._getframe* argument
*** Here is an alternative for it
    #+BEGIN_SRC python
      def currentframe():
          """Return the frame object for the caller's stack frame."""
          try:
              raise Exception
          except Exception:
              return sys.exc_info()[2].tb_frame.f_back

    #+END_SRC
* bytecode
** inspect
* trace function
** coverage
* codecs
** ruby like string interpolation
** react like python
* ast and import hooks
** pytest - assert rewrite
** import sql files like python files
* TODO pony orm
** object disassembling
