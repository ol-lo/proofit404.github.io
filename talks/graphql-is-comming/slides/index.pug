doctype html
html
  head
    meta(charset='utf-8')
    link(rel='stylesheet' type='text/css' href='css/reveal.css')
    link(rel='stylesheet' type='text/css' href='css/theme/serif.css' id='theme')
    link(rel='stylesheet' type='text/css' href='lib/css/github-gist.min.css')
    link(rel='stylesheet' type='text/css' href='css/customize.css')
    title GraphQL is comming
    script.
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    <!--[if lt IE 9]>
    script(src='lib/js/html5shiv.js')
    <![endif]-->
  body
    .reveal
      .slides
        section
          img(src='pic/logo.svg').logo
          h2 GraphQL is comming
          h3 Artem Malyshev
          h4 @proofit404
        section
          h4 django/channels
          h4 django/daphne
          h4 django/asgi_redis
          h4 proofit404/asgi_rabbitmq
          h4 pika/pika
          h4 jupyter/kernel_gateway
          h4 proofit404/dependencies
          h4 xquery-mode/xquery-mode
          h4 bbatsov/projectile
          h4 melpa/melpa
        section(data-background='pic/todolist.png' data-background-size='contain')
          br
        section(data-background-color='#FFFFFF')
          h4 What's wrong with REST?
          img(src='pic/server-roundtrips.png')
          aside.notes
            p Hyperlinks
            p To many round trips
        section
          h4 Expand relations
          pre
            code.json.
              {
                  "title": "Finish monthly growth report",
                  "category": "Growth Team",
                  "tasks": [
                      {"order": 1, "title": "Review samples"},
                      {"order": 2, "title": "Summarize"},
                      {"order": 3, "title": "Send to customer"},
                      ...
                  ],
              }
          aside.notes
            p DRF nested serializers as fields
            p Overfetching
        section
          h4 Custom endpoints
          pre
            code.
              /todos_with_everything_i_need

              /todos_with_everything_i_need_with_author_v2

              /todos_with_everything_i_need_for_samsung_smart_tv

              /tightly_coupled_endpoint_for_a_specific_client
          aside.notes
            p Unpleasant to work API
        section(data-background='pic/man-data-analytics.jpg' data-background-size='contain' data-background-color='#6F7170')
          br
          aside.notes
            p We do not think in
            p endpoints or join tables
        section
          img(src='pic/logo.svg').logo
          h3 GraphQL
        section
          h4 Hello world
          pre
            code.
              {
                me {
                  name
                }
              }
        section
          h4 Hello world
          pre
            code.json.
                         {
              {            "data": {
                me {          "me": {
                  name           "name": "Artem"
                }             }
              }            }
                         }
        section
          h4 Schema
          pre
            code.graphql.
              type Task {
                id: ID!
                title: String!
                description: String!
                createdBy: Employee!
                assignedTo: Employee!
                statusHistory: [Status]
                comments: [Comment]
              }
        section
          img(src='pic/magic-cat.png')
        section(data-background-color='#DB594C')
          img(src='pic/graphene.svg').logo.graphene-bg
          h3.white-text Graphene
        section
          h4 Schema in Python
          pre
            code.python.small.
              type Task {                class Task(ObjectType):
                id: ID!                      id = NonNull(ID)
                title: String!               title = NonNull(String)
                description: String!         description = NonNull(String)
                created: Employee!           created = NonNull(Employee)
                assigned: Employee!          assigned = NonNull(Employee)
                statusHistory: [Status]      status_history = List(Status)
                comments: [Comment]          comments = List(Comment)
              }
        section
          h4 Schema in Django
          pre
            code.python.
              class Task(DjangoObjectType):
                  class Meta:
                      model = TaskModel

              class Query(ObjectType):
                  tasks = List(Task)

                  def resolve_tasks(self, args, context, info):
                      return TaskModel.objects.all()
        section
          h4 Views
          pre
            code.python.
              schema = graphene.Schema(query=Query)

              view = GraphQLView.as_view(schema, graphiql=True)

              urlpatterns = [url(r'^$', view, name='graphql')]
        section
          h4 Authorization
        section
          h4 Batching
    script(src='lib/js/head.min.js')
    script(src='js/reveal.js')
    script(src='lib/js/highlight.min.js')
    script.
      hljs.initHighlightingOnLoad();
    script.
      Reveal.initialize({
          controls: false,
          progress: false,
          slideNumber: true,
          history: true,
          transition: 'none',
          dependencies: [
              { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
              { src: 'plugin/notes/notes.js', async: true }
          ]
      });
//- Local Variables:
//- eval: (add-hook (quote after-save-hook) (function (lambda nil (let ((proc (start-process-shell-command "pug" "*Pug*" (format "pug %s" (buffer-file-name))))) (set-process-sentinel proc (function (lambda (proc status) (if (zerop (process-exit-status proc)) (and (buffer-file-name) (message "Pug: rendered %s" (file-name-nondirectory (buffer-file-name)))) (message "Pug: error")))))))) nil t)
//- eval: (start-process-shell-command "http.server" "*http.server*" "python -m http.server --bind localhost 4001")
//- eval: (run-at-time 2 nil (function browse-url) "http://localhost:4001")
//- End:
