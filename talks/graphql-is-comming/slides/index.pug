doctype html
html
  head
    meta(charset='utf-8')
    link(rel='stylesheet' type='text/css' href='css/reveal.css')
    link(rel='stylesheet' type='text/css' href='css/theme/serif.css' id='theme')
    link(rel='stylesheet' type='text/css' href='lib/css/github-gist.min.css')
    link(rel='stylesheet' type='text/css' href='css/customize.css')
    title GraphQL is comming
    script.
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    <!--[if lt IE 9]>
    script(src='lib/js/html5shiv.js')
    <![endif]-->
  body
    .reveal
      .slides
        section
          img(src='pic/logo.svg' height='150' width='150')
          h2 GraphQL is comming
          h3 Artem Malyshev
          h4 @proofit404
        section
          h4 django/channels
          h4 django/daphne
          h4 django/asgi_redis
          h4 proofit404/asgi_rabbitmq
          h4 pika/pika
          h4 jupyter/kernel_gateway
          h4 proofit404/dependencies
          h4 xquery-mode/xquery-mode
          h4 bbatsov/projectile
          h4 melpa/melpa
    script(src='lib/js/head.min.js')
    script(src='js/reveal.js')
    script(src='lib/js/highlight.min.js')
    script.
      hljs.initHighlightingOnLoad();
    script.
      Reveal.initialize({
          controls: false,
          progress: false,
          slideNumber: true,
          history: true,
          transition: 'none',
          dependencies: [
              { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
              { src: 'plugin/notes/notes.js', async: true }
          ]
      });
//- Local Variables:
//- eval: (add-hook (quote after-save-hook) (function (lambda nil (let ((proc (start-process-shell-command "pug" "*Pug*" (format "pug %s" (buffer-file-name))))) (set-process-sentinel proc (function (lambda (proc status) (if (zerop (process-exit-status proc)) (and (buffer-file-name) (message "Pug: rendered %s" (file-name-nondirectory (buffer-file-name)))) (message "Pug: error")))))))) nil t)
//- eval: (start-process-shell-command "http.server" "*http.server*" "python -m http.server --bind localhost 4001")
//- eval: (run-at-time 2 nil (function browse-url) "http://localhost:4001")
//- End:
